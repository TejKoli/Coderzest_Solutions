/*
Problem Statement:-
You are on an excursion to Rome. You are given an assignment to create a pragram which displays all the leap years in a given range as ROMAN NUMERALS.

I - 1

V - 5

X - 10

L - 50

C - 100

D - 500

M - 1000

V' - 5000

IX' - 9000

Input Format

The first line of the input contains a single integer T denoting the number of test cases. The description of each test case is as follows:

The first line of each test case contains two space-separated integers M and N.
Constraints

1 ≤ T ≤ 10⁵

0 ≤ M ≤ 9999

0 ≤ N ≤ 9999

Output Format

For each test case, print all the leap years in the given range (Both M and N excluded) as Roman numbers (Every year on a new line).

For invalid input, display appropriate messages.
*/

/*
Answer:-
*/

#include <iostream>
using namespace std; 

void integer_to_Roman(int n) {  // functions int-roman no.


    string str_romans[] = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};	//Array cretaed for roman & integers.
    int values[] = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};   //as given in problem statement.

    string result =" ";		//Empty string .

    for (int  i = 0; i < 13; ++i){	//loop to 
        while(n - values[i] >= 0)
        {
            result += str_romans[i];
            n -= values[i];
        }
    }

    cout<<result;		//returns the result.
}


int main(){
    int T;		//test case.
    cin>>T;
    int M, N;	//Years range with two variables.
    
    for(int i=0;i<T;i++){
           
        cin>>M;
        cin>>N;
        if((M<0 || M>9999)||(N<0||N>9999)){				//Checking for the boundaries that user should not execed.
            cout<<"Input out of bounds"<<endl;
            }
        else{
            for(int j=M+1;j<N;j++){			//Loop for the range of given input of years by user .
                if(j%4==0){					//if the remainder = 0 return integer_to_Roman(j) function.
                    integer_to_Roman(j);  
                    cout<<endl;
                }
            }
        }
            
    }

    return 0;
}


















